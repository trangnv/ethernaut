{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "consecutiveWins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_guess",
          "type": "bool"
        }
      ],
      "name": "flip",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/nvtrang/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.0.0/contracts/math/SafeMath.sol",
    "5": "contracts/03_CoinFlip/CoinFlip.sol"
  },
  "ast": {
    "absolutePath": "contracts/03_CoinFlip/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        87
      ]
    },
    "id": 88,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "/Users/nvtrang/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.0.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 88,
        "sourceUnit": 1390,
        "src": "57:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 87,
        "linearizedBaseContracts": [
          87
        ],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5,
            "libraryName": {
              "contractScope": null,
              "id": 3,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1389,
              "src": "139:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1389",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "133:27:5",
            "typeName": {
              "id": 4,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "152:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "e6f334d7",
            "id": 7,
            "mutability": "mutable",
            "name": "consecutiveWins",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 87,
            "src": "163:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "163:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "lastHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 87,
            "src": "197:16:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "197:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "FACTOR",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 87,
            "src": "217:94:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "217:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "234:77:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                "typeString": "int_const 5789...(69 digits omitted)...9968"
              },
              "value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "337:30:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15,
                      "name": "consecutiveWins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "343:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "361:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "343:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "343:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 20,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:2:5"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:0:5"
            },
            "scope": 87,
            "src": "316:51:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "420:386:5",
              "statements": [
                {
                  "assignments": [
                    28
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28,
                      "mutability": "mutable",
                      "name": "blockValue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 85,
                      "src": "426:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "426:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 39,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 35,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "482:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 32,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "465:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "465:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 34,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1239,
                              "src": "465:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 36,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "465:19:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 31,
                          "name": "blockhash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -5,
                          "src": "455:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (uint256) view returns (bytes32)"
                          }
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "455:30:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 30,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "447:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 29,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "447:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "447:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "426:60:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "lastHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "497:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "blockValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "509:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "497:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 47,
                  "nodeType": "IfStatement",
                  "src": "493:51:5",
                  "trueBody": {
                    "id": 46,
                    "nodeType": "Block",
                    "src": "521:23:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 43,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "529:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "529:8:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45,
                        "nodeType": "ExpressionStatement",
                        "src": "529:8:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 48,
                      "name": "lastHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "550:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "blockValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "561:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "550:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "550:21:5"
                },
                {
                  "assignments": [
                    53
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53,
                      "mutability": "mutable",
                      "name": "coinFlip",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 85,
                      "src": "577:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "577:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 58,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "FACTOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "611:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "blockValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "596:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1319,
                      "src": "596:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "596:22:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "577:41:5"
                },
                {
                  "assignments": [
                    60
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60,
                      "mutability": "mutable",
                      "name": "side",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 85,
                      "src": "624:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 59,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "624:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 67,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "coinFlip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "636:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "648:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "636:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "659:5:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "636:28:5",
                    "trueExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "652:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "624:40:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "675:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 69,
                      "name": "_guess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "683:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "675:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "748:54:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 77,
                            "name": "consecutiveWins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "756:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "774:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "756:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "756:19:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "790:5:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 26,
                        "id": 82,
                        "nodeType": "Return",
                        "src": "783:12:5"
                      }
                    ]
                  },
                  "id": 84,
                  "nodeType": "IfStatement",
                  "src": "671:131:5",
                  "trueBody": {
                    "id": 76,
                    "nodeType": "Block",
                    "src": "691:51:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "699:17:5",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 71,
                            "name": "consecutiveWins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "699:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 73,
                        "nodeType": "ExpressionStatement",
                        "src": "699:17:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "731:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 26,
                        "id": 75,
                        "nodeType": "Return",
                        "src": "724:11:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1d263f67",
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flip",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_guess",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 86,
                  "src": "385:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "384:13:5"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 86,
                  "src": "414:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "413:6:5"
            },
            "scope": 87,
            "src": "371:435:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 88,
        "src": "110:698:5"
      }
    ],
    "src": "32:776:5"
  },
  "bytecode": "6080604052600160ff1b60025534801561001857600080fd5b50600080556102d28061002c6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006e575b600080fd5b61005a6004803603602081101561005157600080fd5b50351515610088565b604080519115158252519081900360200190f35b61007661010f565b60408051918252519081900360200190f35b600080610096436001610115565b600154904091508114156100a957600080fd5b60018190556002546000906100bf90839061015e565b90506000816001146100d25760006100d5565b60015b905084151581151514156100fa575050600080546001908101909155915061010a9050565b50506000808055915061010a9050565b919050565b60005481565b600061015783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506101a0565b9392505050565b600061015783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610237565b6000818484111561022f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156101f45781810151838201526020016101dc565b50505050905090810190601f1680156102215780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836102865760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101f45781810151838201526020016101dc565b50600083858161029257fe5b049594505050505056fea2646970667358221220ffc8a183381b3bb168d547968c41520baabf6544fb20deb036cc36107bb5e37e64736f6c634300060c0033",
  "bytecodeSha1": "21839885abd65141ca9ded443b466ff0267d498c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "CoinFlip",
  "coverageMap": {
    "branches": {
      "1": {
        "SafeMath.div": {
          "14": [
            3817,
            3822,
            true
          ]
        },
        "SafeMath.sub": {
          "13": [
            1805,
            1811,
            true
          ]
        }
      },
      "5": {
        "CoinFlip.flip": {
          "10": [
            497,
            519,
            false
          ],
          "11": [
            636,
            649,
            true
          ],
          "12": [
            675,
            689,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "SafeMath.div": {
          "7": [
            3110,
            3156
          ],
          "9": [
            3809,
            3837
          ]
        },
        "SafeMath.sub": {
          "6": [
            1351,
            1401
          ],
          "8": [
            1797,
            1826
          ]
        }
      },
      "5": {
        "CoinFlip.flip": {
          "0": [
            529,
            537
          ],
          "1": [
            550,
            571
          ],
          "2": [
            699,
            716
          ],
          "3": [
            724,
            735
          ],
          "4": [
            756,
            775
          ],
          "5": [
            783,
            795
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.0.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006e575b600080fd5b61005a6004803603602081101561005157600080fd5b50351515610088565b604080519115158252519081900360200190f35b61007661010f565b60408051918252519081900360200190f35b600080610096436001610115565b600154904091508114156100a957600080fd5b60018190556002546000906100bf90839061015e565b90506000816001146100d25760006100d5565b60015b905084151581151514156100fa575050600080546001908101909155915061010a9050565b50506000808055915061010a9050565b919050565b60005481565b600061015783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506101a0565b9392505050565b600061015783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610237565b6000818484111561022f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156101f45781810151838201526020016101dc565b50505050905090810190601f1680156102215780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836102865760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101f45781810151838201526020016101dc565b50600083858161029257fe5b049594505050505056fea2646970667358221220ffc8a183381b3bb168d547968c41520baabf6544fb20deb036cc36107bb5e37e64736f6c634300060c0033",
  "deployedSourceMap": "110:698:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;371:435;;;;;;;;;;;;;;;;-1:-1:-1;371:435:5;;;;:::i;:::-;;;;;;;;;;;;;;;;;;163:30;;;:::i;:::-;;;;;;;;;;;;;;;;371:435;414:4;;465:19;:12;482:1;465:16;:19::i;:::-;497:8;;455:30;;;-1:-1:-1;497:22:5;;493:51;;;529:8;;;493:51;550:8;:21;;;611:6;;577:16;;596:22;;561:10;;596:14;:22::i;:::-;577:41;;624:9;636:8;648:1;636:13;:28;;659:5;636:28;;;652:4;636:28;624:40;;683:6;675:14;;:4;:14;;;671:131;;;-1:-1:-1;;699:15:5;:17;;;;;;;;;;-1:-1:-1;724:11:5;;-1:-1:-1;724:11:5;671:131;-1:-1:-1;;774:1:5;756:19;;;774:1;-1:-1:-1;783:12:5;;-1:-1:-1;783:12:5;371:435;;;;:::o;163:30::-;;;;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:1:o;3033:130::-;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;1692:187::-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:1;;;1692:187::o;3638:338::-;3724:7;3824:12;3817:5;3809:28;;;;-1:-1:-1;;;3809:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3847:9;3863:1;3859;:5;;;;;;;3638:338;-1:-1:-1;;;;;3638:338:1:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    110,
    808
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x88 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x96 NUMBER PUSH1 0x1 PUSH2 0x115 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 BLOCKHASH SWAP2 POP DUP2 EQ ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xBF SWAP1 DUP4 SWAP1 PUSH2 0x15E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 EQ PUSH2 0xD2 JUMPI PUSH1 0x0 PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0xFA JUMPI POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP2 POP PUSH2 0x10A SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 DUP1 SSTORE SWAP2 POP PUSH2 0x10A SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x237 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x286 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1F4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DC JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x292 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xC8 LOG1 DUP4 CODESIZE SHL EXTCODESIZE 0xB1 PUSH9 0xD547968C41520BAABF PUSH6 0x44FB20DEB036 0xCC CALLDATASIZE LT PUSH28 0xB5E37E64736F6C634300060C00330000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        110,
        808
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1D263F67"
    },
    "38": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "EQ",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE6F334D7"
    },
    "49": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E"
    },
    "53": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "DUP1",
      "path": "5"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        110,
        808
      ],
      "op": "REVERT",
      "path": "5"
    },
    "59": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "60": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5A"
    },
    "63": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "65": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "67": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "SUB",
      "path": "5"
    },
    "68": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "70": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "DUP2",
      "path": "5"
    },
    "71": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "LT",
      "path": "5"
    },
    "72": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "73": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x51"
    },
    "76": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "77": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "79": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "80": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "REVERT",
      "path": "5"
    },
    "81": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "82": {
      "op": "POP"
    },
    "83": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "84": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "85": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "86": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x88"
    },
    "89": {
      "fn": "CoinFlip.flip",
      "jump": "i",
      "offset": [
        371,
        806
      ],
      "op": "JUMP",
      "path": "5"
    },
    "90": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "91": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "93": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "94": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "95": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "96": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "97": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "98": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "DUP3",
      "path": "5"
    },
    "99": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "100": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "101": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "102": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "DUP2",
      "path": "5"
    },
    "103": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "104": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "SUB",
      "path": "5"
    },
    "105": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "107": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "ADD",
      "path": "5"
    },
    "108": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "109": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "RETURN",
      "path": "5"
    },
    "110": {
      "offset": [
        163,
        193
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "111": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x76"
    },
    "114": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F"
    },
    "117": {
      "fn": "CoinFlip.flip",
      "jump": "i",
      "offset": [
        163,
        193
      ],
      "op": "JUMP",
      "path": "5"
    },
    "118": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "119": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "121": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "DUP1",
      "path": "5"
    },
    "122": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "123": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "124": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "DUP3",
      "path": "5"
    },
    "125": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "126": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "127": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "128": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "DUP2",
      "path": "5"
    },
    "129": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "130": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "SUB",
      "path": "5"
    },
    "131": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "133": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "ADD",
      "path": "5"
    },
    "134": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "135": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "RETURN",
      "path": "5"
    },
    "136": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "137": {
      "fn": "CoinFlip.flip",
      "offset": [
        414,
        418
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "139": {
      "fn": "CoinFlip.flip",
      "offset": [
        414,
        418
      ],
      "op": "DUP1",
      "path": "5"
    },
    "140": {
      "fn": "CoinFlip.flip",
      "offset": [
        465,
        484
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x96"
    },
    "143": {
      "fn": "CoinFlip.flip",
      "offset": [
        465,
        477
      ],
      "op": "NUMBER",
      "path": "5"
    },
    "144": {
      "fn": "CoinFlip.flip",
      "offset": [
        482,
        483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "146": {
      "fn": "CoinFlip.flip",
      "offset": [
        465,
        481
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x115"
    },
    "149": {
      "fn": "CoinFlip.flip",
      "jump": "i",
      "offset": [
        465,
        484
      ],
      "op": "JUMP",
      "path": "5"
    },
    "150": {
      "fn": "CoinFlip.flip",
      "offset": [
        465,
        484
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "151": {
      "fn": "CoinFlip.flip",
      "offset": [
        497,
        505
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "153": {
      "fn": "CoinFlip.flip",
      "offset": [
        497,
        505
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "154": {
      "fn": "CoinFlip.flip",
      "offset": [
        455,
        485
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "155": {
      "fn": "CoinFlip.flip",
      "offset": [
        455,
        485
      ],
      "op": "BLOCKHASH",
      "path": "5"
    },
    "156": {
      "fn": "CoinFlip.flip",
      "offset": [
        455,
        485
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "157": {
      "op": "POP"
    },
    "158": {
      "fn": "CoinFlip.flip",
      "offset": [
        497,
        519
      ],
      "op": "DUP2",
      "path": "5"
    },
    "159": {
      "branch": 10,
      "fn": "CoinFlip.flip",
      "offset": [
        497,
        519
      ],
      "op": "EQ",
      "path": "5"
    },
    "160": {
      "fn": "CoinFlip.flip",
      "offset": [
        493,
        544
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "161": {
      "fn": "CoinFlip.flip",
      "offset": [
        493,
        544
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA9"
    },
    "164": {
      "branch": 10,
      "fn": "CoinFlip.flip",
      "offset": [
        493,
        544
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "165": {
      "fn": "CoinFlip.flip",
      "offset": [
        529,
        537
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 0,
      "value": "0x0"
    },
    "167": {
      "fn": "CoinFlip.flip",
      "offset": [
        529,
        537
      ],
      "op": "DUP1",
      "path": "5"
    },
    "168": {
      "fn": "CoinFlip.flip",
      "offset": [
        529,
        537
      ],
      "op": "REVERT",
      "path": "5"
    },
    "169": {
      "fn": "CoinFlip.flip",
      "offset": [
        493,
        544
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "170": {
      "fn": "CoinFlip.flip",
      "offset": [
        550,
        558
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x1"
    },
    "172": {
      "fn": "CoinFlip.flip",
      "offset": [
        550,
        571
      ],
      "op": "DUP2",
      "path": "5"
    },
    "173": {
      "fn": "CoinFlip.flip",
      "offset": [
        550,
        571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "174": {
      "fn": "CoinFlip.flip",
      "offset": [
        550,
        571
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "175": {
      "fn": "CoinFlip.flip",
      "offset": [
        611,
        617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "177": {
      "fn": "CoinFlip.flip",
      "offset": [
        611,
        617
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "178": {
      "fn": "CoinFlip.flip",
      "offset": [
        577,
        593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "180": {
      "fn": "CoinFlip.flip",
      "offset": [
        577,
        593
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "181": {
      "fn": "CoinFlip.flip",
      "offset": [
        596,
        618
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBF"
    },
    "184": {
      "fn": "CoinFlip.flip",
      "offset": [
        596,
        618
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "185": {
      "fn": "CoinFlip.flip",
      "offset": [
        561,
        571
      ],
      "op": "DUP4",
      "path": "5"
    },
    "186": {
      "fn": "CoinFlip.flip",
      "offset": [
        561,
        571
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "187": {
      "fn": "CoinFlip.flip",
      "offset": [
        596,
        610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15E"
    },
    "190": {
      "fn": "CoinFlip.flip",
      "jump": "i",
      "offset": [
        596,
        618
      ],
      "op": "JUMP",
      "path": "5"
    },
    "191": {
      "fn": "CoinFlip.flip",
      "offset": [
        596,
        618
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "192": {
      "fn": "CoinFlip.flip",
      "offset": [
        577,
        618
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "193": {
      "fn": "CoinFlip.flip",
      "offset": [
        577,
        618
      ],
      "op": "POP",
      "path": "5"
    },
    "194": {
      "fn": "CoinFlip.flip",
      "offset": [
        624,
        633
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "196": {
      "fn": "CoinFlip.flip",
      "offset": [
        636,
        644
      ],
      "op": "DUP2",
      "path": "5"
    },
    "197": {
      "fn": "CoinFlip.flip",
      "offset": [
        648,
        649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "199": {
      "branch": 11,
      "fn": "CoinFlip.flip",
      "offset": [
        636,
        649
      ],
      "op": "EQ",
      "path": "5"
    },
    "200": {
      "fn": "CoinFlip.flip",
      "offset": [
        636,
        664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD2"
    },
    "203": {
      "branch": 11,
      "fn": "CoinFlip.flip",
      "offset": [
        636,
        664
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "204": {
      "fn": "CoinFlip.flip",
      "offset": [
        659,
        664
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "206": {
      "fn": "CoinFlip.flip",
      "offset": [
        636,
        664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD5"
    },
    "209": {
      "fn": "CoinFlip.flip",
      "offset": [
        636,
        664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "210": {
      "fn": "CoinFlip.flip",
      "offset": [
        636,
        664
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "211": {
      "fn": "CoinFlip.flip",
      "offset": [
        652,
        656
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "213": {
      "fn": "CoinFlip.flip",
      "offset": [
        636,
        664
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "214": {
      "fn": "CoinFlip.flip",
      "offset": [
        624,
        664
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "215": {
      "fn": "CoinFlip.flip",
      "offset": [
        624,
        664
      ],
      "op": "POP",
      "path": "5"
    },
    "216": {
      "fn": "CoinFlip.flip",
      "offset": [
        683,
        689
      ],
      "op": "DUP5",
      "path": "5"
    },
    "217": {
      "fn": "CoinFlip.flip",
      "offset": [
        675,
        689
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "218": {
      "fn": "CoinFlip.flip",
      "offset": [
        675,
        689
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "219": {
      "fn": "CoinFlip.flip",
      "offset": [
        675,
        679
      ],
      "op": "DUP2",
      "path": "5"
    },
    "220": {
      "fn": "CoinFlip.flip",
      "offset": [
        675,
        689
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "221": {
      "fn": "CoinFlip.flip",
      "offset": [
        675,
        689
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "222": {
      "branch": 12,
      "fn": "CoinFlip.flip",
      "offset": [
        675,
        689
      ],
      "op": "EQ",
      "path": "5"
    },
    "223": {
      "fn": "CoinFlip.flip",
      "offset": [
        671,
        802
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "224": {
      "fn": "CoinFlip.flip",
      "offset": [
        671,
        802
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFA"
    },
    "227": {
      "branch": 12,
      "fn": "CoinFlip.flip",
      "offset": [
        671,
        802
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "228": {
      "op": "POP"
    },
    "229": {
      "op": "POP"
    },
    "230": {
      "fn": "CoinFlip.flip",
      "offset": [
        699,
        714
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x0"
    },
    "232": {
      "fn": "CoinFlip.flip",
      "offset": [
        699,
        716
      ],
      "op": "DUP1",
      "path": "5"
    },
    "233": {
      "fn": "CoinFlip.flip",
      "offset": [
        699,
        716
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "234": {
      "fn": "CoinFlip.flip",
      "offset": [
        699,
        716
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "236": {
      "fn": "CoinFlip.flip",
      "offset": [
        699,
        716
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "237": {
      "fn": "CoinFlip.flip",
      "offset": [
        699,
        716
      ],
      "op": "DUP2",
      "path": "5"
    },
    "238": {
      "fn": "CoinFlip.flip",
      "offset": [
        699,
        716
      ],
      "op": "ADD",
      "path": "5"
    },
    "239": {
      "fn": "CoinFlip.flip",
      "offset": [
        699,
        716
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "240": {
      "fn": "CoinFlip.flip",
      "offset": [
        699,
        716
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "241": {
      "fn": "CoinFlip.flip",
      "offset": [
        699,
        716
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "242": {
      "fn": "CoinFlip.flip",
      "offset": [
        699,
        716
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "243": {
      "op": "POP"
    },
    "244": {
      "fn": "CoinFlip.flip",
      "offset": [
        724,
        735
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 3,
      "value": "0x10A"
    },
    "247": {
      "fn": "CoinFlip.flip",
      "offset": [
        724,
        735
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "248": {
      "op": "POP"
    },
    "249": {
      "fn": "CoinFlip.flip",
      "offset": [
        724,
        735
      ],
      "op": "JUMP",
      "path": "5"
    },
    "250": {
      "fn": "CoinFlip.flip",
      "offset": [
        671,
        802
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "251": {
      "op": "POP"
    },
    "252": {
      "op": "POP"
    },
    "253": {
      "fn": "CoinFlip.flip",
      "offset": [
        774,
        775
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x0"
    },
    "255": {
      "fn": "CoinFlip.flip",
      "offset": [
        756,
        775
      ],
      "op": "DUP1",
      "path": "5"
    },
    "256": {
      "fn": "CoinFlip.flip",
      "offset": [
        756,
        775
      ],
      "op": "DUP1",
      "path": "5"
    },
    "257": {
      "fn": "CoinFlip.flip",
      "offset": [
        756,
        775
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "258": {
      "fn": "CoinFlip.flip",
      "offset": [
        774,
        775
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "259": {
      "op": "POP"
    },
    "260": {
      "fn": "CoinFlip.flip",
      "offset": [
        783,
        795
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 5,
      "value": "0x10A"
    },
    "263": {
      "fn": "CoinFlip.flip",
      "offset": [
        783,
        795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "264": {
      "op": "POP"
    },
    "265": {
      "fn": "CoinFlip.flip",
      "offset": [
        783,
        795
      ],
      "op": "JUMP",
      "path": "5"
    },
    "266": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "267": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "268": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "269": {
      "fn": "CoinFlip.flip",
      "offset": [
        371,
        806
      ],
      "op": "POP",
      "path": "5"
    },
    "270": {
      "fn": "CoinFlip.flip",
      "jump": "o",
      "offset": [
        371,
        806
      ],
      "op": "JUMP",
      "path": "5"
    },
    "271": {
      "offset": [
        163,
        193
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "272": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "274": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "275": {
      "fn": "CoinFlip.flip",
      "offset": [
        163,
        193
      ],
      "op": "DUP2",
      "path": "5"
    },
    "276": {
      "fn": "CoinFlip.flip",
      "jump": "o",
      "offset": [
        163,
        193
      ],
      "op": "JUMP",
      "path": "5"
    },
    "277": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "278": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "280": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 6,
      "value": "0x157"
    },
    "283": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "284": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "285": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "287": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "288": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "289": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "291": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "292": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "294": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "295": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "296": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "298": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "299": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "300": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "302": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "303": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "336": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "337": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "338": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "339": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A0"
    },
    "342": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "343": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "344": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "345": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "346": {
      "op": "POP"
    },
    "347": {
      "op": "POP"
    },
    "348": {
      "op": "POP"
    },
    "349": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "350": {
      "fn": "SafeMath.div",
      "offset": [
        3033,
        3163
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "351": {
      "fn": "SafeMath.div",
      "offset": [
        3091,
        3098
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "353": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 7,
      "value": "0x157"
    },
    "356": {
      "fn": "SafeMath.div",
      "offset": [
        3121,
        3122
      ],
      "op": "DUP4",
      "path": "1"
    },
    "357": {
      "fn": "SafeMath.div",
      "offset": [
        3124,
        3125
      ],
      "op": "DUP4",
      "path": "1"
    },
    "358": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "360": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "361": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "DUP1",
      "path": "1"
    },
    "362": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "364": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "ADD",
      "path": "1"
    },
    "365": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "367": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "368": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "DUP1",
      "path": "1"
    },
    "369": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "371": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "DUP2",
      "path": "1"
    },
    "372": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "373": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "375": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "ADD",
      "path": "1"
    },
    "376": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "409": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "DUP2",
      "path": "1"
    },
    "410": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "411": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "POP",
      "path": "1"
    },
    "412": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3120
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x237"
    },
    "415": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3117,
        3156
      ],
      "op": "JUMP",
      "path": "1"
    },
    "416": {
      "fn": "SafeMath.sub",
      "offset": [
        1692,
        1879
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "417": {
      "fn": "SafeMath.sub",
      "offset": [
        1778,
        1785
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "419": {
      "fn": "SafeMath.sub",
      "offset": [
        1813,
        1825
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 8
    },
    "420": {
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "DUP5",
      "path": "1"
    },
    "421": {
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "DUP5",
      "path": "1"
    },
    "422": {
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "GT",
      "path": "1"
    },
    "423": {
      "branch": 13,
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "424": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22F"
    },
    "427": {
      "branch": 13,
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "428": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "430": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "431": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "435": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "437": {
      "op": "SHL"
    },
    "438": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "1"
    },
    "439": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "440": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "442": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "1"
    },
    "443": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "1"
    },
    "444": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "1"
    },
    "445": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "447": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "1"
    },
    "448": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP3",
      "path": "1"
    },
    "449": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "1"
    },
    "450": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SUB",
      "path": "1"
    },
    "451": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP3",
      "path": "1"
    },
    "452": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "453": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "1"
    },
    "454": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "1"
    },
    "455": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "1"
    },
    "456": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "457": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "1"
    },
    "458": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "459": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "461": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "1"
    },
    "462": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "463": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "1"
    },
    "464": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "1"
    },
    "465": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "466": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "467": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "469": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "1"
    },
    "470": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "471": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "1"
    },
    "472": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "1"
    },
    "473": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "1"
    },
    "474": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "476": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "477": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "1"
    },
    "478": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "1"
    },
    "479": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "LT",
      "path": "1"
    },
    "480": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "481": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "484": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "485": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "1"
    },
    "486": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "1"
    },
    "487": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "1"
    },
    "488": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "489": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "1"
    },
    "490": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP3",
      "path": "1"
    },
    "491": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "1"
    },
    "492": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "493": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "495": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "1"
    },
    "496": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DC"
    },
    "499": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMP",
      "path": "1"
    },
    "500": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "501": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "1"
    },
    "502": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "1"
    },
    "503": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "1"
    },
    "504": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "1"
    },
    "505": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "506": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "1"
    },
    "507": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "508": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "1"
    },
    "509": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "1"
    },
    "510": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "511": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "513": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "AND",
      "path": "1"
    },
    "514": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "1"
    },
    "515": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "516": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x221"
    },
    "519": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "520": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "1"
    },
    "521": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP3",
      "path": "1"
    },
    "522": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SUB",
      "path": "1"
    },
    "523": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "1"
    },
    "524": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "525": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "527": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "1"
    },
    "528": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "530": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SUB",
      "path": "1"
    },
    "531": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "534": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "EXP",
      "path": "1"
    },
    "535": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SUB",
      "path": "1"
    },
    "536": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "NOT",
      "path": "1"
    },
    "537": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "AND",
      "path": "1"
    },
    "538": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "1"
    },
    "539": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "540": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "542": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "1"
    },
    "543": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "544": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "1"
    },
    "545": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "546": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "1"
    },
    "547": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "548": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "1"
    },
    "549": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "1"
    },
    "550": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "1"
    },
    "551": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "553": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "554": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "1"
    },
    "555": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "556": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SUB",
      "path": "1"
    },
    "557": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "558": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "REVERT",
      "path": "1"
    },
    "559": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "560": {
      "op": "POP"
    },
    "561": {
      "op": "POP"
    },
    "562": {
      "op": "POP"
    },
    "563": {
      "fn": "SafeMath.sub",
      "offset": [
        1848,
        1853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "564": {
      "fn": "SafeMath.sub",
      "offset": [
        1848,
        1853
      ],
      "op": "SUB",
      "path": "1"
    },
    "565": {
      "fn": "SafeMath.sub",
      "offset": [
        1848,
        1853
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "566": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1692,
        1879
      ],
      "op": "JUMP",
      "path": "1"
    },
    "567": {
      "fn": "SafeMath.div",
      "offset": [
        3638,
        3976
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "568": {
      "fn": "SafeMath.div",
      "offset": [
        3724,
        3731
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "570": {
      "fn": "SafeMath.div",
      "offset": [
        3824,
        3836
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 9
    },
    "571": {
      "branch": 14,
      "fn": "SafeMath.div",
      "offset": [
        3817,
        3822
      ],
      "op": "DUP4",
      "path": "1"
    },
    "572": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x286"
    },
    "575": {
      "branch": 14,
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "576": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "578": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "579": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "583": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "1"
    },
    "587": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "588": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "590": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "592": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP3",
      "path": "1"
    },
    "593": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "1"
    },
    "594": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "1"
    },
    "595": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "1"
    },
    "596": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "597": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "1"
    },
    "598": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "599": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "601": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP5",
      "path": "1"
    },
    "602": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "1"
    },
    "603": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "604": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "1"
    },
    "605": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "606": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "607": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "608": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "1"
    },
    "609": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "610": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "612": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "613": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "614": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "1"
    },
    "615": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "616": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "617": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP6",
      "path": "1"
    },
    "618": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "1"
    },
    "619": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "620": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP1",
      "path": "1"
    },
    "621": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "1"
    },
    "622": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "1"
    },
    "623": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "625": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "1"
    },
    "626": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "627": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "630": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "631": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "1"
    },
    "632": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "1"
    },
    "633": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "1"
    },
    "634": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "635": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "1"
    },
    "636": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP3",
      "path": "1"
    },
    "637": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "1"
    },
    "638": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "639": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "641": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "1"
    },
    "642": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DC"
    },
    "645": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMP",
      "path": "1"
    },
    "646": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "647": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "1"
    },
    "648": {
      "fn": "SafeMath.div",
      "offset": [
        3847,
        3856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "650": {
      "fn": "SafeMath.div",
      "offset": [
        3863,
        3864
      ],
      "op": "DUP4",
      "path": "1"
    },
    "651": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3860
      ],
      "op": "DUP6",
      "path": "1"
    },
    "652": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "DUP2",
      "path": "1"
    },
    "653": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292"
    },
    "656": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "657": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "INVALID",
      "path": "1"
    },
    "658": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "659": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "DIV",
      "path": "1"
    },
    "660": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "661": {
      "fn": "SafeMath.div",
      "offset": [
        3638,
        3976
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "op": "POP"
    },
    "664": {
      "op": "POP"
    },
    "665": {
      "op": "POP"
    },
    "666": {
      "op": "POP"
    },
    "667": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3638,
        3976
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "3e56fed820549946b332dfc3f89d62c7f55a01a5",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract CoinFlip {\n\n  using SafeMath for uint256;\n  uint256 public consecutiveWins;\n  uint256 lastHash;\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\n  constructor() public {\n    consecutiveWins = 0;\n  }\n\n  function flip(bool _guess) public returns (bool) {\n    uint256 blockValue = uint256(blockhash(block.number.sub(1)));\n\n    if (lastHash == blockValue) {\n      revert();\n    }\n\n    lastHash = blockValue;\n    uint256 coinFlip = blockValue.div(FACTOR);\n    bool side = coinFlip == 1 ? true : false;\n\n    if (side == _guess) {\n      consecutiveWins++;\n      return true;\n    } else {\n      consecutiveWins = 0;\n      return false;\n    }\n  }\n}",
  "sourceMap": "110:698:5:-:0;;;-1:-1:-1;;;217:94:5;;316:51;;;;;;;;;-1:-1:-1;361:1:5;343:19;;110:698;;;;;;",
  "sourcePath": "contracts/03_CoinFlip/CoinFlip.sol",
  "type": "contract"
}