{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes8",
          "name": "_gateKey",
          "type": "bytes8"
        }
      ],
      "name": "enter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entrant",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/14_GatekeeperTwo/GatekeeperTwo.sol"
  },
  "ast": {
    "absolutePath": "contracts/14_GatekeeperTwo/GatekeeperTwo.sol",
    "exportedSymbols": {
      "GatekeeperTwo": [
        136
      ]
    },
    "id": 137,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 51,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 136,
        "linearizedBaseContracts": [
          136
        ],
        "name": "GatekeeperTwo",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9db31d77",
            "id": 53,
            "mutability": "mutable",
            "name": "entrant",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 136,
            "src": "86:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 52,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "86:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "134:60:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 56,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "152:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "152:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 58,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "166:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "166:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "152:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "144:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "144:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "144:32:0"
                },
                {
                  "id": 63,
                  "nodeType": "PlaceholderStatement",
                  "src": "186:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 65,
            "name": "gateOne",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "131:2:0"
            },
            "src": "115:79:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "219:127:0",
              "statements": [
                {
                  "assignments": [
                    68
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68,
                      "mutability": "mutable",
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 78,
                      "src": "229:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "229:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "229:6:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "254:50:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "268:26:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "caller",
                                "nodeType": "YulIdentifier",
                                "src": "285:6:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "285:8:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "273:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "273:21:0"
                        },
                        "variableNames": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "268:1:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 68,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "268:1:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 70,
                  "nodeType": "InlineAssembly",
                  "src": "245:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 72,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "321:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "326:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "321:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "313:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "313:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "313:15:0"
                },
                {
                  "id": 77,
                  "nodeType": "PlaceholderStatement",
                  "src": "338:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 79,
            "name": "gateTwo",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "216:2:0"
            },
            "src": "200:146:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "388:182:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 91,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "460:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 92,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "460:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 89,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "443:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 90,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "encodePacked",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "443:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 93,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "443:28:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 88,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "433:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 94,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "433:39:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 87,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "426:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes8_$",
                                    "typeString": "type(bytes8)"
                                  },
                                  "typeName": {
                                    "id": 86,
                                    "name": "bytes8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "426:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "426:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes8",
                                  "typeString": "bytes8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes8",
                                  "typeString": "bytes8"
                                }
                              ],
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "419:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 84,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "419:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "419:55:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "^",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 99,
                                "name": "_gateKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81,
                                "src": "500:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes8",
                                  "typeString": "bytes8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes8",
                                  "typeString": "bytes8"
                                }
                              ],
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "493:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 97,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "493:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "493:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "419:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "536:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "529:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 102,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "529:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "529:9:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "541:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "529:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "419:123:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "398:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "398:154:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "398:154:0"
                },
                {
                  "id": 111,
                  "nodeType": "PlaceholderStatement",
                  "src": "562:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 113,
            "name": "gateThree",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_gateKey",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "371:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "370:17:0"
            },
            "src": "352:218:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "710:57:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 127,
                      "name": "entrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "720:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -26,
                        "src": "730:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "730:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "720:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "720:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "756:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 126,
                  "id": 133,
                  "nodeType": "Return",
                  "src": "749:11:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3370204e",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 118,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 117,
                  "name": "gateOne",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 65,
                  "src": "631:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "631:7:0"
              },
              {
                "arguments": null,
                "id": 120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 119,
                  "name": "gateTwo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 79,
                  "src": "647:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "647:7:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 122,
                    "name": "_gateKey",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 115,
                    "src": "673:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  }
                ],
                "id": 123,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 121,
                  "name": "gateThree",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 113,
                  "src": "663:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes8_$",
                    "typeString": "modifier (bytes8)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "663:19:0"
              }
            ],
            "name": "enter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_gateKey",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "591:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "590:17:0"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "700:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "699:6:0"
            },
            "scope": 136,
            "src": "576:191:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 137,
        "src": "57:712:0"
      }
    ],
    "src": "32:738:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50610177806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633370204e1461003b5780639db31d7714610076575b600080fd5b6100626004803603602081101561005157600080fd5b50356001600160c01b03191661009a565b604080519115158252519081900360200190f35b61007e610132565b604080516001600160a01b039092168252519081900360200190f35b6000333214156100a957600080fd5b333b80156100b657600080fd5b82600160000367ffffffffffffffff168160c01c3360405160200180826001600160a01b031660601b81526014019150506040516020818303038152906040528051906020012060c01c1867ffffffffffffffff161461011557600080fd5b600080546001600160a01b03191632179055600192505050919050565b6000546001600160a01b03168156fea2646970667358221220f188500ddca22618777f1ff52153fa1594215defcb4ec5a45a7754f23cc0ddf064736f6c634300060c0033",
  "bytecodeSha1": "364e81432862f2b45c3154247395c2ab887777e5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "GatekeeperTwo",
  "coverageMap": {
    "branches": {
      "0": {
        "GatekeeperTwo.enter": {
          "1": [
            152,
            175,
            true
          ],
          "2": [
            321,
            327,
            true
          ],
          "3": [
            419,
            542,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "GatekeeperTwo.enter": {
          "0": [
            720,
            739
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c80633370204e1461003b5780639db31d7714610076575b600080fd5b6100626004803603602081101561005157600080fd5b50356001600160c01b03191661009a565b604080519115158252519081900360200190f35b61007e610132565b604080516001600160a01b039092168252519081900360200190f35b6000333214156100a957600080fd5b333b80156100b657600080fd5b82600160000367ffffffffffffffff168160c01c3360405160200180826001600160a01b031660601b81526014019150506040516020818303038152906040528051906020012060c01c1867ffffffffffffffff161461011557600080fd5b600080546001600160a01b03191632179055600192505050919050565b6000546001600160a01b03168156fea2646970667358221220f188500ddca22618777f1ff52153fa1594215defcb4ec5a45a7754f23cc0ddf064736f6c634300060c0033",
  "deployedSourceMap": "57:712:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:191;;;;;;;;;;;;;;;;-1:-1:-1;576:191:0;-1:-1:-1;;;;;;576:191:0;;:::i;:::-;;;;;;;;;;;;;;;;;;86:22;;;:::i;:::-;;;;-1:-1:-1;;;;;86:22:0;;;;;;;;;;;;;;576:191;700:4;152:10;166:9;152:23;;144:32;;;;;;285:8:::1;273:21;321:6:::0;;313:15:::1;;;::::0;::::1;;673:8:::2;541:1;536;529:13;419:123;;500:8;493:16;;460:10;443:28;;;;;;-1:-1:-1::0;;;;;443:28:0::2;;;;;;;;;;;;;;;;;;;;;;433:39;;;;;;419:55;;:90;:123;;;398:154;;;::::0;::::2;;720:7:::3;:19:::0;;-1:-1:-1;;;;;;720:19:0::3;730:9;720:19;::::0;;;;-1:-1:-1;338:1:0::2;186::::1;576:191:::0;;;:::o;86:22::-;;;-1:-1:-1;;;;;86:22:0;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    57,
    769
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3370204E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9DB31D77 EQ PUSH2 0x76 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND PUSH2 0x9A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER ORIGIN EQ ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER EXTCODESIZE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 SUB PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 SHR CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND ORIGIN OR SWAP1 SSTORE PUSH1 0x1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL DUP9 POP 0xD 0xDC LOG2 0x26 XOR PUSH24 0x7F1FF52153FA1594215DEFCB4EC5A45A7754F23CC0DDF064 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        57,
        769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3370204E"
    },
    "38": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9DB31D77"
    },
    "49": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76"
    },
    "53": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        57,
        769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "59": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "60": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62"
    },
    "63": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "65": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "67": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "SUB",
      "path": "0"
    },
    "68": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "70": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "DUP2",
      "path": "0"
    },
    "71": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "LT",
      "path": "0"
    },
    "72": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "73": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51"
    },
    "76": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "77": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "79": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "REVERT",
      "path": "0"
    },
    "81": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "82": {
      "op": "POP"
    },
    "83": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "84": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "86": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "88": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "90": {
      "op": "SHL"
    },
    "91": {
      "op": "SUB"
    },
    "92": {
      "op": "NOT"
    },
    "93": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "AND",
      "path": "0"
    },
    "94": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A"
    },
    "97": {
      "fn": "GatekeeperTwo.enter",
      "jump": "i",
      "offset": [
        576,
        767
      ],
      "op": "JUMP",
      "path": "0"
    },
    "98": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "99": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "101": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "103": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "104": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "105": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "106": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "DUP3",
      "path": "0"
    },
    "107": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "108": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "109": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "110": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "DUP2",
      "path": "0"
    },
    "111": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "112": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "SUB",
      "path": "0"
    },
    "113": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "115": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "ADD",
      "path": "0"
    },
    "116": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "117": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "RETURN",
      "path": "0"
    },
    "118": {
      "offset": [
        86,
        108
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "119": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E"
    },
    "122": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "125": {
      "fn": "GatekeeperTwo.enter",
      "jump": "i",
      "offset": [
        86,
        108
      ],
      "op": "JUMP",
      "path": "0"
    },
    "126": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "127": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "129": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "DUP1",
      "path": "0"
    },
    "130": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "137": {
      "op": "SHL"
    },
    "138": {
      "op": "SUB"
    },
    "139": {
      "offset": [
        86,
        108
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "140": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "141": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "AND",
      "path": "0"
    },
    "142": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "DUP3",
      "path": "0"
    },
    "143": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "144": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "145": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "146": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "147": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "148": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "SUB",
      "path": "0"
    },
    "149": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "151": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "ADD",
      "path": "0"
    },
    "152": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "153": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "RETURN",
      "path": "0"
    },
    "154": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "155": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        700,
        704
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "157": {
      "offset": [
        152,
        162
      ],
      "op": "CALLER",
      "path": "0"
    },
    "158": {
      "offset": [
        166,
        175
      ],
      "op": "ORIGIN",
      "path": "0"
    },
    "159": {
      "offset": [
        152,
        175
      ],
      "op": "EQ",
      "path": "0"
    },
    "160": {
      "branch": 1,
      "fn": "GatekeeperTwo.enter",
      "offset": [
        152,
        175
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "161": {
      "offset": [
        144,
        176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9"
    },
    "164": {
      "branch": 1,
      "offset": [
        144,
        176
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "165": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        144,
        176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "167": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        144,
        176
      ],
      "op": "DUP1",
      "path": "0"
    },
    "168": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        144,
        176
      ],
      "op": "REVERT",
      "path": "0"
    },
    "169": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        144,
        176
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "170": {
      "offset": [
        285,
        293
      ],
      "op": "CALLER",
      "path": "0"
    },
    "171": {
      "offset": [
        273,
        294
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "172": {
      "offset": [
        321,
        327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "branch": 2,
      "fn": "GatekeeperTwo.enter",
      "offset": [
        321,
        327
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "174": {
      "offset": [
        313,
        328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "177": {
      "branch": 2,
      "offset": [
        313,
        328
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "178": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        313,
        328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "180": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        313,
        328
      ],
      "op": "DUP1",
      "path": "0"
    },
    "181": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        313,
        328
      ],
      "op": "REVERT",
      "path": "0"
    },
    "182": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        313,
        328
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        673,
        681
      ],
      "op": "DUP3",
      "path": "0"
    },
    "184": {
      "offset": [
        541,
        542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "186": {
      "offset": [
        536,
        537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "188": {
      "offset": [
        529,
        542
      ],
      "op": "SUB",
      "path": "0"
    },
    "189": {
      "offset": [
        419,
        542
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "198": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        419,
        542
      ],
      "op": "AND",
      "path": "0"
    },
    "199": {
      "offset": [
        500,
        508
      ],
      "op": "DUP2",
      "path": "0"
    },
    "200": {
      "offset": [
        493,
        509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "202": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        493,
        509
      ],
      "op": "SHR",
      "path": "0"
    },
    "203": {
      "offset": [
        460,
        470
      ],
      "op": "CALLER",
      "path": "0"
    },
    "204": {
      "offset": [
        443,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "206": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "207": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "209": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "ADD",
      "path": "0"
    },
    "210": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "DUP3",
      "path": "0"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "218": {
      "op": "SHL"
    },
    "219": {
      "op": "SUB"
    },
    "220": {
      "offset": [
        443,
        471
      ],
      "op": "AND",
      "path": "0"
    },
    "221": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "223": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "SHL",
      "path": "0"
    },
    "224": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "DUP2",
      "path": "0"
    },
    "225": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "226": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "228": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "ADD",
      "path": "0"
    },
    "229": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "230": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "POP",
      "path": "0"
    },
    "231": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "POP",
      "path": "0"
    },
    "232": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "234": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "235": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "237": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "DUP2",
      "path": "0"
    },
    "238": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "DUP4",
      "path": "0"
    },
    "239": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "SUB",
      "path": "0"
    },
    "240": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "SUB",
      "path": "0"
    },
    "241": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "DUP2",
      "path": "0"
    },
    "242": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "243": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "244": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "246": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        443,
        471
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "247": {
      "offset": [
        433,
        472
      ],
      "op": "DUP1",
      "path": "0"
    },
    "248": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        433,
        472
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "249": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        433,
        472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "250": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        433,
        472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "252": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        433,
        472
      ],
      "op": "ADD",
      "path": "0"
    },
    "253": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        433,
        472
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "254": {
      "offset": [
        419,
        474
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "256": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        419,
        474
      ],
      "op": "SHR",
      "path": "0"
    },
    "257": {
      "offset": [
        419,
        509
      ],
      "op": "XOR",
      "path": "0"
    },
    "258": {
      "offset": [
        419,
        542
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "267": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        419,
        542
      ],
      "op": "AND",
      "path": "0"
    },
    "268": {
      "branch": 3,
      "fn": "GatekeeperTwo.enter",
      "offset": [
        419,
        542
      ],
      "op": "EQ",
      "path": "0"
    },
    "269": {
      "offset": [
        398,
        552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "272": {
      "branch": 3,
      "offset": [
        398,
        552
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "273": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        398,
        552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "275": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        398,
        552
      ],
      "op": "DUP1",
      "path": "0"
    },
    "276": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        398,
        552
      ],
      "op": "REVERT",
      "path": "0"
    },
    "277": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        398,
        552
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "278": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        720,
        727
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "280": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        720,
        739
      ],
      "op": "DUP1",
      "path": "0"
    },
    "281": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        720,
        739
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "288": {
      "op": "SHL"
    },
    "289": {
      "op": "SUB"
    },
    "290": {
      "op": "NOT"
    },
    "291": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        720,
        739
      ],
      "op": "AND",
      "path": "0"
    },
    "292": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        730,
        739
      ],
      "op": "ORIGIN",
      "path": "0"
    },
    "293": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        720,
        739
      ],
      "op": "OR",
      "path": "0"
    },
    "294": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        720,
        739
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "295": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        720,
        739
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "296": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        720,
        739
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "298": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        720,
        739
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "299": {
      "op": "POP"
    },
    "300": {
      "offset": [
        338,
        339
      ],
      "op": "POP",
      "path": "0"
    },
    "301": {
      "offset": [
        186,
        187
      ],
      "op": "POP",
      "path": "0"
    },
    "302": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "303": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "304": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        576,
        767
      ],
      "op": "POP",
      "path": "0"
    },
    "305": {
      "fn": "GatekeeperTwo.enter",
      "jump": "o",
      "offset": [
        576,
        767
      ],
      "op": "JUMP",
      "path": "0"
    },
    "306": {
      "offset": [
        86,
        108
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "309": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "316": {
      "op": "SHL"
    },
    "317": {
      "op": "SUB"
    },
    "318": {
      "offset": [
        86,
        108
      ],
      "op": "AND",
      "path": "0"
    },
    "319": {
      "fn": "GatekeeperTwo.enter",
      "offset": [
        86,
        108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "320": {
      "fn": "GatekeeperTwo.enter",
      "jump": "o",
      "offset": [
        86,
        108
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "8207b64976266b37171927eaa413cd93d087e973",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract GatekeeperTwo {\n    address public entrant;\n\n    modifier gateOne() {\n        require(msg.sender != tx.origin);\n        _;\n    }\n\n    modifier gateTwo() {\n        uint x;\n        assembly {\n            x := extcodesize(caller())\n        }\n        require(x == 0);\n        _;\n    }\n\n    modifier gateThree(bytes8 _gateKey) {\n        require(\n            uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^\n                uint64(_gateKey) ==\n                uint64(0) - 1\n        );\n        _;\n    }\n\n    function enter(bytes8 _gateKey)\n        public\n        gateOne\n        gateTwo\n        gateThree(_gateKey)\n        returns (bool)\n    {\n        entrant = tx.origin;\n        return true;\n    }\n}\n",
  "sourceMap": "57:712:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/14_GatekeeperTwo/GatekeeperTwo.sol",
  "type": "contract"
}